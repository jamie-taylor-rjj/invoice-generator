name: 'WinForms - Run all tests'

## Only runs when someone pushes to main or PRs against main or develop
on:
  push:
    branches:
      - main
      - develop
      - feature/*
    ## Builds not be run if the following files are the ones which are
    ## changed in a push to main
    ## see: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-excluding-paths
    paths-ignore:
      - '**/*.md'
      - 'NET-Maui/**'
  pull_request:
    branches:
      - main
      - develop
    ## Builds not be run if the following files are the ones which are
    ## changed in a push to main
    ## see: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-excluding-paths
    paths-ignore:
      - '**/*.md'
      - 'NET-Maui/**'

jobs:

  ## Create a build job
  test:
    
    ## We want out build image to run Windows vLatest
    ## This will change, once we migrate away from WinForms. It's not possible
    ## to build WinForms applications on anything but Windows
    runs-on: windows-latest

    ## The Steps section is where we define the steps required to run this job on
    ## the target machine.
    steps:

    ## The first thing we need to do is get the latest code out from git, otherwise
    ## we can't build anything
    - name: Checkout the code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    ## Next we need to ensure that we have the .NET tooling installed.
    - name: Install the .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        ## Ensure that we have AT LEAST version 6.0 of .NET, but don't include any
        ## pre-release builds
        dotnet-version: '6.0.x'
        include-prerelease: false
      ## Set a number of environment variables for the .NET tooling (these need
      ## to be set on our first step which uses the .NET tooling in order to take
      ## effect).
      ## We're setting these so that our logs are shorter, easier to read, and
      ## so that builds are around 1-2 second faster than normally. 
      env:
        ## removes logo and telemetry message from first run of dotnet cli 
        DOTNET_NOLOGO: 1
        ## opt-out of .NET tooling telemetry being sent to Microsoft 
        DOTNET_CLI_TELEMETRY_OPTOUT: 1

    ## Now we need to restore any NuGet packages that we rely on in order to build
    ## or run the application
    - name: Install code level dependencies
      run: dotnet restore .\WinForms\
    
    ## Building is next. Note the use of both the --configuration and
    ## --no-restore flags.
    ## The first flag sets the build configuration. We want Release here as it
    ## will produce a smaller binary than a Debug (which is the default) build.
    ## When running a Release build, the compiler will optimise your code and
    ## remove any debugging statements that it adds in order to make debugging
    ## easier - note: its still possible to debug Release code.
    ## The second flag tells the .NET tooling not to attempt to restore any NuGet
    ## packages. This is a time saving operation, as we restored them in the
    ## previous step.
    - name: Build
      run: dotnet build .\WinForms\ --no-restore --configuration Release
    
    ## Run all of the discovered tests for this repository, telling the dotnet
    ## tooling to not waste time building (--no-build), use the Release config
    ## (--configuration Release), and only print the normal amount of logs to
    ## the screen (--verbosity normal).
    ## We also want it to collect cross platform readable code coverage stats
    ## (--collect: "XPlat Code Coverage") and store them in a known location
    ## (-- results-directory ./coverage)
    ## The code coverage stats will show us how much of the code base is covered
    ## by our tests. This can be useful to identify which areas are NOT covered
    ## by our tests, and it can help us to identify where we should spend our
    ## personal and technical bandwidth in shoring up the test coverage. 
    - name: Run tests
      run: dotnet test .\WinForms\ --configuration Release --no-build
